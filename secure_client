#!/usr/bin/env python
# https://github.com/zeromq/pyzmq/blob/master/examples/security/ironhouse.py

import logging
import os
import sys

import zmq
import zmq.auth
from zmq.auth.thread import ThreadAuthenticator
import time


def run():
    ''' Run Ironhouse example '''

    # These directories are generated by the generate_certificates script
    base_dir = os.path.dirname(__file__)
    keys_dir = os.path.join(base_dir, 'certificates')
    public_keys_dir = os.path.join(base_dir, 'public_keys')
    secret_keys_dir = os.path.join(base_dir, 'private_keys')

    if not (os.path.exists(keys_dir) and
            os.path.exists(public_keys_dir) and
            os.path.exists(secret_keys_dir)):
        logging.critical("Certificates are missing - run generate_certificates.py script first")
        sys.exit(1)

    ctx = zmq.Context.instance()

    client = ctx.socket(zmq.PULL)
    # secret_keys_dir = os.path.join(base_dir, 'private_keys')
    # server_secret_file = os.path.join(secret_keys_dir, "server.key_secret")
    # server_public, server_secret = zmq.auth.load_certificate(server_secret_file)

    server_public_dir = os.path.join(base_dir, 'public_keys')
    server_public_file = os.path.join(server_public_dir, "server.key")
    server_public, server_secret = zmq.auth.load_certificate(server_public_file)
    # secret is none https://pyzmq.readthedocs.io/en/latest/api/zmq.auth.html

    # We need two certificates, one for the client and one for
    # the server. The client must know the server's public key
    # to make a CURVE connection.
    client_secret_file = os.path.join(secret_keys_dir, "client.key_secret")
    client_public, client_secret = zmq.auth.load_certificate(client_secret_file)
    client.curve_secretkey = client_secret
    client.curve_publickey = client_public

    client.curve_serverkey = server_public
    client.connect('tcp://127.0.0.1:9000')

    while True:
        time.sleep(1)
        msg = client.recv()
        print(msg)
        # if client.poll(1000):
        # if False:
        #     msg = client.recv()
        #     if msg == b"Hello":
        #         logging.info("Ironhouse test OK")
        # else:
        #     logging.error("Ironhouse test FAIL")


if __name__ == '__main__':
    if zmq.zmq_version_info() < (4,0):
        raise RuntimeError("Security is not supported in libzmq version < 4.0. libzmq version {0}".format(zmq.zmq_version()))

    if '-v' in sys.argv:
        level = logging.DEBUG
    else:
        level = logging.INFO

    logging.basicConfig(level=level, format="[%(levelname)s] %(message)s")

    run()
